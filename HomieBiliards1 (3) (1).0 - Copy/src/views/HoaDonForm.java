/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import entities.receipts.HoaDon;
import javax.swing.table.DefaultTableModel;
import entities.subjects.KhachHang;
import entities.subjects.TaiKhoan;
import entities.products.SanPhamChiTiet;
import entities.products.SanPhamChiTiet1;
import entities.products.SanPham;
import entities.receipts.GiamGiaHoaDon;
import entities.receipts.LichSuHoaDon;
import entities.receipts.ThanhToan;
import entities.receipts.TrangThaiHoaDon;
import entities.receipts.HoaDonChiTiet;
import java.io.BufferedOutputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import repositories.receipts.HoaDonRepository;
import repositories.receipts.HoaDonChiTietRepository;
import repositories.receipts.LichSuHoaDonRepository;
import repositories.products.SanPhamRepository;
import repositories.products.SanPhamChiTietRepository;
import repositories.receipts.LichSuHoaDonRepository;
import repositories.receipts.Rp_GiamGiaHD;
import repositories.receipts.ThanhToanRepository;
import repositories.subjects.KhachHangRepository;
import repositories.subjects.TaiKhoanRepository;
import utils.DateConverter;

/**
 *
 * @author nguye
 */
public class HoaDonForm extends javax.swing.JPanel {

    private List<HoaDon> listHoaDon = new ArrayList<>();
    private List<HoaDonChiTiet> listHoaDonCT = new ArrayList<>();
    private List<SanPhamChiTiet1> listSPCT = new ArrayList<>();
    private HoaDonRepository reHoaDon = new HoaDonRepository();
    private HoaDonChiTietRepository reHoaDonCT = new HoaDonChiTietRepository();
    private List<LichSuHoaDon> lsHoaDon = new ArrayList<>();
    private LichSuHoaDonRepository relsHoaDon = new LichSuHoaDonRepository();
    private Rp_GiamGiaHD reGGHoaDon = new Rp_GiamGiaHD();
    private SanPhamChiTietRepository reSPCT = new SanPhamChiTietRepository();

    /**
     * Creates new form HoaDon1Form
     */
    public HoaDonForm() {
        initComponents();
        this.fillHoaDon(reHoaDon.selectAll());
        this.textSearch();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        tbl_HoaDon = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        cbbLoc = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaHoaDon = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        rdoUnPaid = new javax.swing.JRadioButton();
        rdoDeleted = new javax.swing.JRadioButton();
        rdoPaid = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtSoTienGiam = new javax.swing.JTextField();
        btnPDF = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        tbl_HDCT = new javax.swing.JScrollPane();
        tblChiTietHoaDon = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLichSuHD = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hóa Đơn");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_HoaDon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbl_HoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_HoaDonMouseClicked(evt);
            }
        });

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã hóa đơn", "Mã khách hàng", "Mã nhân viên", "Ngày thanh toán", "Ngày cập nhật", "Ngày xóa", "Giá trị", "Số tiền giảm", "Giá trị tổng", "Trạng thái hóa đơn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        tbl_HoaDon.setViewportView(tblHoaDon);
        if (tblHoaDon.getColumnModel().getColumnCount() > 0) {
            tblHoaDon.getColumnModel().getColumn(0).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(1).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(2).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(3).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(4).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(5).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(6).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(7).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(8).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(9).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(10).setResizable(false);
        }

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        cbbLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đã thanh toán", "Chưa thanh toán", "Tất cả" }));
        cbbLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(cbbLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbl_HoaDon)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(tbl_HoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Mã hóa đơn:");

        jLabel3.setText("Mã khách hàng");

        buttonGroup1.add(rdoUnPaid);
        rdoUnPaid.setText("Chưa thanh toán");

        buttonGroup1.add(rdoDeleted);
        rdoDeleted.setText("Đã hủy");

        buttonGroup1.add(rdoPaid);
        rdoPaid.setText("Đã thanh toán ");

        jLabel5.setText("Số tiền giảm");

        btnPDF.setText("Xuất Excel");
        btnPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");

        jButton3.setText("jButton3");

        jButton4.setText("jButton4");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(rdoPaid)
                        .addGap(74, 74, 74)
                        .addComponent(rdoUnPaid))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel3)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSoTienGiam, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(rdoDeleted)))
                .addGap(112, 112, 112)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPDF)
                    .addComponent(jButton2))
                .addGap(44, 44, 44)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtSoTienGiam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPDF)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoPaid)
                    .addComponent(rdoUnPaid)
                    .addComponent(rdoDeleted)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addGap(19, 19, 19))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết hóa đơn", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        tblChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Sản phẩm", "Màu sắc", "Chuôi", "Ngọn", "Tay cầm", "Ren", "Đầu cơ bản", "Đường kính đầu", "Trọng lượng", "Thương hiệu", "Xuất xứ", "Số lượng", "Đơn giá", "Bảo hành"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_HDCT.setViewportView(tblChiTietHoaDon);
        if (tblChiTietHoaDon.getColumnModel().getColumnCount() > 0) {
            tblChiTietHoaDon.getColumnModel().getColumn(0).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(1).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(2).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(3).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(4).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(5).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(6).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(7).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(8).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(9).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(10).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(11).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(12).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(13).setResizable(false);
            tblChiTietHoaDon.getColumnModel().getColumn(14).setResizable(false);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbl_HDCT)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(tbl_HDCT, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lịch sử hóa đơn", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        tblLichSuHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã tài khoản", "Ngày cập nhật", "Hành động"
            }
        ));
        jScrollPane2.setViewportView(tblLichSuHD);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ghi chú", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane4.setViewportView(txtGhiChu);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void fillHoaDon(List<HoaDon> listHoaDon) {
//        listHoaDon = reHoaDon.selectAll();
        String hienThi[] = {"STT", "Mã hóa đơn", "Mã khách hàng", "Mã nhân viên", "Ngày tạo", "Giá trị", "Số tiền giảm", "Giá trị tổng", "Trạng thái hóa đơn", "Chương trình giảm giá"};
        DefaultTableModel modelHoaDon = new DefaultTableModel(hienThi, 0);
        modelHoaDon.setRowCount(0);
        int i = 1;
        if (txtTimKiem.getText().trim().equalsIgnoreCase("")) {
            for (HoaDon hd : listHoaDon) {
                Object[] row = {i, hd.getMaHoaDon(), MaKH(hd.getIdKhachHang()), MaTK(hd.getIdTaiKhoan()), hd.getNgayTao(), hd.getGiaTri(), hd.getSoTienGiam(), hd.getGiaTriTong(), TTHD(hd.getIdTrangThaiHoaDon()), MaGG(hd.getIdGiamGiaHoaDon())};
                modelHoaDon.addRow(row);
                i++;
            }
            tblHoaDon.setModel(modelHoaDon);
        } else {
            for (HoaDon hd : listHoaDon) {
                if (hd.getIdTrangThaiHoaDon().toString().contains(txtTimKiem.getText()) || hd.getMaHoaDon().toString().contains(txtTimKiem.getText()) || hd.getIdKhachHang().toString().contains(txtTimKiem.getText()) || hd.getIdTaiKhoan().toString().contains(txtTimKiem.getText())) {
//                if (hd.getTrangThaiHoaDon().contains(txtTimKiem.getText()) || hd.getMaHoaDon().contains(txtTimKiem.getText()) || hd.getMaKhachHang().contains(txtTimKiem.getText()) || hd.getMaTaiKhoan().contains(txtTimKiem.getText())) {
                    Object[] row = {i, hd.getMaHoaDon(), MaKH(hd.getIdKhachHang()), MaTK(hd.getIdTaiKhoan()), hd.getNgayTao(), hd.getGiaTri(), hd.getSoTienGiam(), hd.getGiaTriTong(), TTHD(hd.getIdTrangThaiHoaDon()), MaGG(hd.getIdGiamGiaHoaDon())};
                    modelHoaDon.addRow(row);
                    i++;
                }
            }
            tblHoaDon.setModel(modelHoaDon);
        }
    }

    public String MaGG(int i) {
        String ten = "";
        ten = reGGHoaDon.GG(i);
        return ten;
    }

    public String MaTK(int i) {
        String ma = "";
        if (i < 10) {
            ma = "TK00" + i;
        } else if (i < 100) {
            ma = "TK0" + i;
        } else if (i < 1000) {
            ma = "TK" + i;
        }
        return ma;
    }

    public String MaKH(int i) {
        String ma = "";
        if (i < 10) {
            ma = "KH00" + i;
        } else if (i < 100) {
            ma = "KH0" + i;
        } else if (i < 1000) {
            ma = "KH" + i;
        }
        return ma;
    }

    public String TTHD(int i) {
        String tt = "";
        if (i == 1) {
            tt = "Chưa thanh toán";
        } else if (i == 2) {
            tt = "Đã thanh toán";
        } else if (i < 1000) {
            tt = "Đã hủy";
        }
        return tt;
    }

    public void FindHD(int id) {
        listHoaDon = reHoaDon.selectFind(id);
        int i = 1;
        String hienThi[] = {"STT", "Mã hóa đơn", "Mã khách hàng", "Mã nhân viên", "Ngày tạo", "Ngày cập nhật", "Ngày xóa", "Giá trị", "Số tiền giảm", "Giá trị tổng", "Trạng thái hóa đơn", "Chương trình giảm giá"};
        DefaultTableModel modelHoaDon = new DefaultTableModel(hienThi, 0);
        modelHoaDon.setRowCount(0);
        if (txtTimKiem.getText().trim().equalsIgnoreCase("")) {
            for (HoaDon hd : listHoaDon) {
                Object[] row = {i, hd.getMaHoaDon(), MaKH(hd.getIdKhachHang()), MaTK(hd.getIdTaiKhoan()), hd.getNgayTao(), hd.getNgayCapNhat(), hd.getNgayXoa(), hd.getGiaTri(), hd.getSoTienGiam(), hd.getGiaTriTong(), TTHD(hd.getIdTrangThaiHoaDon()), MaGG(hd.getIdGiamGiaHoaDon())};
                modelHoaDon.addRow(row);
                i++;
            }
            tblHoaDon.setModel(modelHoaDon);
        } else {
            for (HoaDon hd : listHoaDon) {
                if (hd.getIdTrangThaiHoaDon().toString().contains(txtTimKiem.getText()) || hd.getMaHoaDon().contains(txtTimKiem.getText()) || hd.getIdKhachHang().toString().contains(txtTimKiem.getText()) || hd.getIdTaiKhoan().toString().contains(txtTimKiem.getText())) {
                    Object[] row = {i, hd.getMaHoaDon(), MaKH(hd.getIdKhachHang()), MaTK(hd.getIdTaiKhoan()), hd.getNgayTao(), hd.getNgayCapNhat(), hd.getNgayXoa(), hd.getGiaTri(), hd.getSoTienGiam(), hd.getGiaTriTong(), TTHD(hd.getIdTrangThaiHoaDon()), MaGG(hd.getIdGiamGiaHoaDon())};
                    modelHoaDon.addRow(row);
                    i++;
                }
            }
            tblHoaDon.setModel(modelHoaDon);
        }
    }

    public void fillLS() {
        lsHoaDon = relsHoaDon.selectLSHD(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 1).toString());
        String hienThi[] = {"Mã tài khoản", "Ngày cập nhật", "Ghi chú"};
        DefaultTableModel modelLSHD = new DefaultTableModel(hienThi, 0);
        modelLSHD.setRowCount(0);
        for (LichSuHoaDon ls : lsHoaDon) {
            Object[] row = {MaTK(ls.getIdTaiKhoan()), ls.getNgayCapNhat(), ls.getGhiChu()};
            modelLSHD.addRow(row);
        }
        tblLichSuHD.setModel(modelLSHD);
    }

    public void fillIndexSelected() {
        listSPCT = reSPCT.selectSPCT(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 1).toString());
//        listSPCT = reSPCT.selectSPCT();
//        listGioHang = reHoaDonCT.selectHDCT((int) tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0));
        String hienThi[] = {"Stt", "Mã sản phẩm", "Màu sắc", "Chuôi", "Ngọn", "Tay cầm", "Ren", "Đầu cơ bản", "Đường kính đầu", "Trọng lượng", "Thương hiệu", "Xuất xứ", "Số lượng", "Đơn giá", "Bảo hành"};
        DefaultTableModel modelHDCT = new DefaultTableModel(hienThi, 0);
        modelHDCT.setRowCount(0);
        int i = 1;
        for (SanPhamChiTiet1 sp : listSPCT) {
            Object[] row = {i, sp.getMaSanPham(), sp.getMauSac(), sp.getChuoi(), sp.getNgon(), sp.getTayCam(), sp.getRen(), sp.getDauCoBan(), sp.getDuongKinhDau(), sp.getTrongLuong(), sp.getThuongHieu(), sp.getXuatXu(), sp.getSoLuong(), sp.getGiaBan(), sp.getBaoHanh()};
            i++;
            modelHDCT.addRow(row);
        }
        tblChiTietHoaDon.setModel(modelHDCT);
        listHoaDon = reHoaDon.selectAll();
        for (HoaDon hd : listHoaDon) {
            if (hd.getId() == (int) tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0)) {
                txtGhiChu.setText(hd.getGhiChu());
            }
        }
    }

    //timkiem
    private void textSearch() {
        txtTimKiem.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                timKiem();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                timKiem();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                timKiem();
            }

        }
        );
    }

    private void timKiem() {
        String timKiem = txtTimKiem.getText().trim();
        fillHoaDon(reHoaDon.search(timKiem));
    }
    
        private void addComboBox() {
        cbbLoc.addActionListener(evt -> {
            String selectedItem = cbbLoc.getSelectedItem().toString();

            switch (selectedItem) {
                case "Đã thanh toán":
                    fillHoaDon(reHoaDon.getAllTrangThai(1));
                    break;
                case "Chưa thanh toán":
                    fillHoaDon(reHoaDon.getAllTrangThai(2));
                    break;
                case "Đã hủy":
                    fillHoaDon(reHoaDon.getAllTrangThai(3));
                    break;
               
                case "Tất cả ":
                    fillHoaDon(reHoaDon.selectAll());
                    break;
            }
        });
        }


    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        fillIndexSelected();
        fillLS();
        txtMaHoaDon.setText((String) tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 1));
        txtMaKH.setText((String) tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 2));
        txtSoTienGiam.setText((tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 8)).toString());
        if ((tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 10)).toString().equals("Đã thanh toán")) {
            cbbLoc.setSelectedItem(true);
        }
        if ((tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 10)).toString().equals("Chưa thanh toán")) {
            cbbLoc.setSelectedItem(true);
        }
//        if ((tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 10)).toString().equals("Da huy")) {
//            rdoDeleted.setSelected(true);
//        }
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void tbl_HoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_HoaDonMouseClicked
        // TODO add your handling code here:
//                fillIndexSelected(tblHoaDon.getSelectedRow());
//                listHoaDonCT = reHoaDonCT.selectHDCT((int) tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0));
//                String hienThi[] = {"Mã sản phẩm", "Số lượng", "Đơn giá", "Trạng thái"};
//                DefaultTableModel modelHDCT = new DefaultTableModel(hienThi, 0);
//                modelHDCT.setRowCount(0);
//                for (HoaDonChiTiet hdct : listHoaDonCT) {
//                    Object[] row = {hdct.getIdSanPhamChiTiet(), hdct.getSoLuong(), hdct.getGiaBan(), hdct.getTrangThai()};
//                    modelHDCT.addRow(row);
//                }
//                tblChiTietHoaDon.setModel(modelHDCT);
    }//GEN-LAST:event_tbl_HoaDonMouseClicked

    private void btnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFActionPerformed
        // TODO add your handling code here:
        try {

            JFileChooser fileChooser = new JFileChooser("/");
            fileChooser.setDialogTitle("Chon noi luu");
            FileNameExtensionFilter extFilter = new FileNameExtensionFilter("Excel spreeadsheet files", "xls", "xlsx", "xism");
            fileChooser.setFileFilter(extFilter);

            int confirm = fileChooser.showSaveDialog(this);

            if (confirm == JFileChooser.APPROVE_OPTION) {
                XSSFWorkbook excelWorkbook = new XSSFWorkbook();
                XSSFSheet sheet = excelWorkbook.createSheet("SPCT");

                HashMap<Integer, ArrayList> tableData = new HashMap<>();

//                for (int row = 0; row < tblSanPhamChiTiet.getRowCount(); row++) {
//                    ArrayList<Object> rowData = new ArrayList<>();
//
//                    for (int col = 0; col < tblSanPhamChiTiet.getColumnCount(); col++) {
//
//                        rowData.add(tblSanPhamChiTiet.getValueAt(row, col));
//                    }
//                    tableData.put(row, rowData);
//                }
//                fill sheet with table data
                for (int row = 0; row < tblHoaDon.getRowCount(); row++) {
                    XSSFRow sheetRow = sheet.createRow(row);

                    for (int col = 1; col < tblHoaDon.getColumnCount(); col++) {
                        XSSFCell cell = sheetRow.createCell(col);

                        Object data = tblHoaDon.getValueAt(row, col);

                        if (data == null) {
                            continue;
                        }

                        cell.setCellValue(data.toString());
                    }

                }
                FileOutputStream fos = new FileOutputStream(fileChooser.getSelectedFile() + ".xlsx");
                BufferedOutputStream bos = new BufferedOutputStream(fos);

                excelWorkbook.write(bos);
                bos.close();

                JOptionPane.showMessageDialog(this, "Export thành công");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
         
   
//try {
//            Integer trangThai;
//           switch (cbbLoc.getSelectedItem().toString()) {
//        case "Chưa thanh toán":
//            trangThai = 1;
//            break;
//        case "Đã thanh toán":
//            trangThai = 2;
//            break;
//        case "Đã hủy":
//            trangThai = 3;
//            break;
//            
//        default:
//            trangThai = null;
//    }
//        } catch (Exception e) {
//        }


    }//GEN-LAST:event_btnPDFActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void cbbLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLocActionPerformed
        // TODO add your handling code here:
       String selectedItem = cbbLoc.getSelectedItem().toString();

        if (selectedItem.equals("Chưa thanh toán")) {
            this.fillHoaDon(reHoaDon.getAllTrangThai(1));
        } else if (selectedItem.equals("Đã thanh toán")) {
              this.fillHoaDon(reHoaDon.getAllTrangThai(2));
        } else if (selectedItem.equals("Đã hủy")) {
            this.fillHoaDon(reHoaDon.getAllTrangThai(3));
        } else if (selectedItem.equals("Tất cả")) {
            this.fillHoaDon(reHoaDon.selectAll());
        } else {
            // Xử lý trường hợp mặc định hoặc không hợp lệ nếu cần
            JOptionPane.showMessageDialog(this, "Trạng thái không hợp lệ");
        }
        addComboBox();
    }//GEN-LAST:event_cbbLocActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPDF;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbLoc;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JRadioButton rdoDeleted;
    private javax.swing.JRadioButton rdoPaid;
    private javax.swing.JRadioButton rdoUnPaid;
    private javax.swing.JTable tblChiTietHoaDon;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblLichSuHD;
    private javax.swing.JScrollPane tbl_HDCT;
    private javax.swing.JScrollPane tbl_HoaDon;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtMaHoaDon;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtSoTienGiam;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
